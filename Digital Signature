import java.security.*;
import java.util.Base64;

public class DigitalSignature {
    static byte[] sign(String msg, PrivateKey k) throws Exception {
        var s = Signature.getInstance("SHA256withDSA");
        s.initSign(k);
        s.update(msg.getBytes());
        return s.sign();
    }

    static boolean verify(String msg, byte[] sigBytes, PublicKey k) throws Exception {
        var s = Signature.getInstance("SHA256withDSA");
        s.initVerify(k);
        s.update(msg.getBytes());
        return s.verify(sigBytes);
    }

    public static void main(String[] args) throws Exception {
        var kpg = KeyPairGenerator.getInstance("DSA");
        kpg.initialize(2048);
        var kp = kpg.generateKeyPair();

        String msg = "This is the message to be digitally signed.";
        byte[] sig = sign(msg, kp.getPrivate());

        System.out.println("Original: " + msg);
        System.out.println("Signature: " + Base64.getEncoder().encodeToString(sig));
        System.out.println("Verified: " + verify(msg, sig, kp.getPublic()));
        System.out.println("Tampered Verified: " + verify("This is a tampered message.", sig, kp.getPublic()));
    }
}


Output:
Original Text: This is the message to be digitally signed.
Signature (Base64):
MDwCHBaN6Yi0Obiiq3sXquwheaPsL2haTZ7EOjOWnrwCHHF5u4tE5Gbq5hC6NelXz2J
N0nUktego5MZppko=
Signature Verified: true Tampered Signature Verified: false
